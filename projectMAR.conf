[general]
# resolution is the resolution of the output display (It is advised
# to use 1280x720 to ensure a smooth experience)
resolution=1280x720

# log_level is the logging level
# CRITICAL=50
# ERROR=40
# WARNING=30
# INFO=20
# DEBUG=10
# NOTSET=0
log_level=20

# projectm_enabled is a boolean parameter to enable projectM visualizations
# projectm_restore is a boolean parameter to enable relaunching projectMSDL if it exits
projectm_enabled=True
projectm_restore=False

[media_player]
# The following allows the user to select how the audio is processed
# There are audio receiver modes: manual and automatic.
# manual mode requires the user to define their audio devices by name
# automatic mode will manage the audio based off the audio type
audio_mode=automatic

# allow_multiple_sinks is an experimental setting to allow multiple sinks assigned to a combined sink 
allow_multiple_sinks=True

[projectm]
path=/opt/ProjectMSDL/

# advanced_shuffle will randomize the presets by using a numerical prefix to play in order
# screenshots_enabled will enable/disable screenshots of the visualizations for previewing later
advanced_shuffle=true
screenshots_enabled=true


[manual]
# source_mic_devices are any microphone devices conncted to the pi
# source_aux_devices are any auxilary devices connected to the pi
# sink_devices are any output devices connected to the pi
source_mic_devices=
source_aux_devices=
sink_devices=


[automatic]
# output_device defines whether or not to use hdmi or an external sound card for sound output. Leave blank for either.
# input_mode defines how to handle audio devices connected to the pi
# aux mode will manage routing audio between source and sink_devices
# mic mode is for using the pi solely for video as routing mic through sink would cause an audio loop
output_device=
input_mode=