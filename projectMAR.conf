[general]
# resolution is the resolution of the output display (It is advised
# to use 1280x720 to ensure a smooth experience)
resolution=1280x720

# log_level is the logging level
# CRITICAL=50
# ERROR=40
# WARNING=30
# INFO=20
# DEBUG=10
# NOTSET=0
log_level=20

# projectm_enabled is a boolean parameter to enable projectM visualizations
# projectm_restore is a boolean parameter to enable relaunching projectMSDL if it exits
projectm_enabled=True
projectm_restore=False

# audio_receiver_enabled is a boolean parameter to enable the control of audio devices
audio_receiver_enabled = True

# display_enforcement is a boolean parameter to enable enforcement of the display resolution for desktop mode
display_enforcement = True

[projectm]
path=/opt/ProjectMSDL/

# advanced_shuffle will randomize the presets by using a numerical prefix to play in order
# screenshots_enabled will enable/disable screenshots of the visualizations for previewing later
advanced_shuffle=True
screenshots_enabled=True

[audio_receiver]
# audio_mode instructs the system to use either manual or automatic mode
# io_device_mode determines the type of source for an input/output card (mic or aux) *Blank defaults to the device description
audio_mode=automatic
io_device_mode=aux

# allow_multiple_sinks allows multiple sinks assigned to a combined sink (This is experimental)
# Issue has been observed with Plexamp then making changes to sinks due to adding a new device or restarting the process (Which triggers an unload of the combined sink)
# allow_multiple_sources allows the use of multiple sources
allow_multiple_sinks=True
allow_multiple_sources=True

# plugin_ctrl is a boolean parameter to allow projectMAR to handle your plugin device processes
# plugins are for user added audio applications (ie: PlexAmp; Airplay, etc)
plugin_ctrl=True
plugins=plugin1

[plugin1]
# name is the name of the plugin application
# path is the path of the plugin application
# arguments are any command line arguments that the application requires
name=
path=
arguments=

[automatic]
# sink_device_type defines whether or not to use internal or an external sound card for sound output. Leave blank for either.
# sink_device_volume is the desired output from .00 - 1.0 *Must be a float
# source_device_type defines whether or not to us mic or aux input devices.  Leave blank to use either
# source_device_volume is the desired output from .00 - 1.0 *Must be a float
# Note: aux input device is handled through looback-modules whereas mic is not to avoid echos
sink_device_type=
sink_device_volume=1.0
source_device_type=
source_device_volume=1.0

[manual]
# For more granualar device control you can manually specify devices.  Devices are prioritized in the list order below
# sink_devices are any output devices connected to the pi
# source_devices are any input devices connected to the pi
# Note: Each device is added below to a comma seperated list.  
# These ids will require a configuration as seen below for sink1/source1
sink_devices=sink1
source_devices=source1

# combined_sink_volume is the desired output from .00 - 1.0 *Must be a float
combined_sink_volume=1.0

[sink1]
# name is the name of the sink device
# type is the type of device (internal or external)
# volume is the desired output from .00 - 1.0 *Must be a float
# 
# Example Config:
# name=alsa_output.platform-107c701400.hdmi.hdmi-stereo
# type=internal
# volume=1.0
name=
type=
volume=

[source1]
# name is the name of the source device
# type is the type of device (mic or aux)
# volume is the desired output from .00 - 1.0 *Must be a float
# 
# Example Config:
# name=alsa_input.usb-C-Media_Electronics_Inc._USB_PnP_Sound_Device-00.analog-mono
# type=mic
# volume=1.0
name=
type=
volume=